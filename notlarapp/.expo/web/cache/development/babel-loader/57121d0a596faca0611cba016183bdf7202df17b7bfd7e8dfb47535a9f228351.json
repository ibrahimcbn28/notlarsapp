{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useTheme } from \"../context/ThemeContext\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function EditProfileScreen(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var user = route.params.user;\n  var _useState = useState(user.name),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setName = _useState2[1];\n  var _useState3 = useState(user.email),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var _useTheme = useTheme(),\n    colors = _useTheme.colors;\n  var handleSave = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (!name.trim() || !email.trim()) {\n        Alert.alert('Uyarı', 'Lütfen tüm alanları doldurun.');\n        return;\n      }\n      try {\n        setLoading(true);\n        var updatedUser = _objectSpread(_objectSpread({}, user), {}, {\n          name: name,\n          email: email\n        });\n        yield AsyncStorage.setItem('user', JSON.stringify(updatedUser));\n        navigation.goBack();\n      } catch (error) {\n        console.error('Profil güncellenirken hata:', error);\n        Alert.alert('Hata', 'Profil güncellenirken bir hata oluştu.');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function handleSave() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: [styles.container, {\n      backgroundColor: colors.background\n    }],\n    children: [_jsxs(View, {\n      style: styles.avatarContainer,\n      children: [_jsx(Image, {\n        style: styles.avatar,\n        source: {\n          uri: user.avatar\n        }\n      }), _jsx(TouchableOpacity, {\n        style: [styles.changeAvatarButton, {\n          backgroundColor: colors.surface\n        }],\n        children: _jsx(Text, {\n          style: [styles.changeAvatarText, {\n            color: colors.primary\n          }],\n          children: \"Foto\\u011Fraf\\u0131 De\\u011Fi\\u015Ftir\"\n        })\n      })]\n    }), _jsxs(View, {\n      style: styles.form,\n      children: [_jsx(Text, {\n        style: [styles.label, {\n          color: colors.text\n        }],\n        children: \"Ad Soyad\"\n      }), _jsx(TextInput, {\n        style: [styles.input, {\n          backgroundColor: colors.surface,\n          color: colors.text,\n          borderColor: colors.border\n        }],\n        value: name,\n        onChangeText: setName,\n        placeholder: \"Ad Soyad\",\n        placeholderTextColor: colors.textSecondary,\n        editable: !loading\n      }), _jsx(Text, {\n        style: [styles.label, {\n          color: colors.text\n        }],\n        children: \"E-posta\"\n      }), _jsx(TextInput, {\n        style: [styles.input, {\n          backgroundColor: colors.surface,\n          color: colors.text,\n          borderColor: colors.border\n        }],\n        value: email,\n        onChangeText: setEmail,\n        placeholder: \"E-posta\",\n        placeholderTextColor: colors.textSecondary,\n        keyboardType: \"email-address\",\n        autoCapitalize: \"none\",\n        editable: !loading\n      }), _jsx(TouchableOpacity, {\n        style: [styles.saveButton, {\n          backgroundColor: colors.primary\n        }, loading && {\n          opacity: 0.7\n        }],\n        onPress: handleSave,\n        disabled: loading,\n        children: loading ? _jsx(ActivityIndicator, {\n          color: colors.background\n        }) : _jsx(Text, {\n          style: [styles.saveButtonText, {\n            color: colors.background\n          }],\n          children: \"Kaydet\"\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20\n  },\n  avatarContainer: {\n    alignItems: 'center',\n    marginBottom: 30\n  },\n  avatar: {\n    width: 120,\n    height: 120,\n    borderRadius: 60,\n    marginBottom: 10\n  },\n  changeAvatarButton: {\n    padding: 10,\n    borderRadius: 20\n  },\n  changeAvatarText: {\n    fontSize: 14,\n    fontWeight: '500'\n  },\n  form: {\n    flex: 1\n  },\n  label: {\n    fontSize: 16,\n    marginBottom: 8,\n    fontWeight: '500'\n  },\n  input: {\n    height: 50,\n    borderWidth: 1,\n    borderRadius: 10,\n    paddingHorizontal: 15,\n    fontSize: 16,\n    marginBottom: 20\n  },\n  saveButton: {\n    height: 50,\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 10\n  },\n  saveButtonText: {\n    fontSize: 16,\n    fontWeight: '600'\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","TextInput","StyleSheet","TouchableOpacity","Image","Alert","ActivityIndicator","AsyncStorage","useTheme","jsx","_jsx","jsxs","_jsxs","EditProfileScreen","_ref","route","navigation","user","params","_useState","name","_useState2","_slicedToArray","setName","_useState3","email","_useState4","setEmail","_useState5","_useState6","loading","setLoading","_useTheme","colors","handleSave","_ref2","_asyncToGenerator","trim","alert","updatedUser","_objectSpread","setItem","JSON","stringify","goBack","error","console","apply","arguments","style","styles","container","backgroundColor","background","children","avatarContainer","avatar","source","uri","changeAvatarButton","surface","changeAvatarText","color","primary","form","label","text","input","borderColor","border","value","onChangeText","placeholder","placeholderTextColor","textSecondary","editable","keyboardType","autoCapitalize","saveButton","opacity","onPress","disabled","saveButtonText","create","flex","padding","alignItems","marginBottom","width","height","borderRadius","fontSize","fontWeight","borderWidth","paddingHorizontal","justifyContent","marginTop"],"sources":["C:/Users/Windows/OneDrive/Masaüstü/notlarapp/src/screens/EditProfileScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n    View,\r\n    Text,\r\n    TextInput,\r\n    StyleSheet,\r\n    TouchableOpacity,\r\n    Image,\r\n    Alert,\r\n    ActivityIndicator,\r\n} from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useTheme } from '../context/ThemeContext';\r\n\r\nexport default function EditProfileScreen({ route, navigation }) {\r\n    const { user } = route.params;\r\n    const [name, setName] = useState(user.name);\r\n    const [email, setEmail] = useState(user.email);\r\n    const [loading, setLoading] = useState(false);\r\n    const { colors } = useTheme();\r\n\r\n    const handleSave = async () => {\r\n        if (!name.trim() || !email.trim()) {\r\n            Alert.alert('Uyarı', 'Lütfen tüm alanları doldurun.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setLoading(true);\r\n            const updatedUser = { ...user, name, email };\r\n            await AsyncStorage.setItem('user', JSON.stringify(updatedUser));\r\n            navigation.goBack();\r\n        } catch (error) {\r\n            console.error('Profil güncellenirken hata:', error);\r\n            Alert.alert('Hata', 'Profil güncellenirken bir hata oluştu.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <View style={[styles.container, { backgroundColor: colors.background }]}>\r\n            <View style={styles.avatarContainer}>\r\n                <Image\r\n                    style={styles.avatar}\r\n                    source={{ uri: user.avatar }}\r\n                />\r\n                <TouchableOpacity\r\n                    style={[styles.changeAvatarButton, { backgroundColor: colors.surface }]}\r\n                >\r\n                    <Text style={[styles.changeAvatarText, { color: colors.primary }]}>\r\n                        Fotoğrafı Değiştir\r\n                    </Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n\r\n            <View style={styles.form}>\r\n                <Text style={[styles.label, { color: colors.text }]}>Ad Soyad</Text>\r\n                <TextInput\r\n                    style={[styles.input, {\r\n                        backgroundColor: colors.surface,\r\n                        color: colors.text,\r\n                        borderColor: colors.border\r\n                    }]}\r\n                    value={name}\r\n                    onChangeText={setName}\r\n                    placeholder=\"Ad Soyad\"\r\n                    placeholderTextColor={colors.textSecondary}\r\n                    editable={!loading}\r\n                />\r\n\r\n                <Text style={[styles.label, { color: colors.text }]}>E-posta</Text>\r\n                <TextInput\r\n                    style={[styles.input, {\r\n                        backgroundColor: colors.surface,\r\n                        color: colors.text,\r\n                        borderColor: colors.border\r\n                    }]}\r\n                    value={email}\r\n                    onChangeText={setEmail}\r\n                    placeholder=\"E-posta\"\r\n                    placeholderTextColor={colors.textSecondary}\r\n                    keyboardType=\"email-address\"\r\n                    autoCapitalize=\"none\"\r\n                    editable={!loading}\r\n                />\r\n\r\n                <TouchableOpacity\r\n                    style={[\r\n                        styles.saveButton,\r\n                        { backgroundColor: colors.primary },\r\n                        loading && { opacity: 0.7 }\r\n                    ]}\r\n                    onPress={handleSave}\r\n                    disabled={loading}\r\n                >\r\n                    {loading ? (\r\n                        <ActivityIndicator color={colors.background} />\r\n                    ) : (\r\n                        <Text style={[styles.saveButtonText, { color: colors.background }]}>\r\n                            Kaydet\r\n                        </Text>\r\n                    )}\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        padding: 20,\r\n    },\r\n    avatarContainer: {\r\n        alignItems: 'center',\r\n        marginBottom: 30,\r\n    },\r\n    avatar: {\r\n        width: 120,\r\n        height: 120,\r\n        borderRadius: 60,\r\n        marginBottom: 10,\r\n    },\r\n    changeAvatarButton: {\r\n        padding: 10,\r\n        borderRadius: 20,\r\n    },\r\n    changeAvatarText: {\r\n        fontSize: 14,\r\n        fontWeight: '500',\r\n    },\r\n    form: {\r\n        flex: 1,\r\n    },\r\n    label: {\r\n        fontSize: 16,\r\n        marginBottom: 8,\r\n        fontWeight: '500',\r\n    },\r\n    input: {\r\n        height: 50,\r\n        borderWidth: 1,\r\n        borderRadius: 10,\r\n        paddingHorizontal: 15,\r\n        fontSize: 16,\r\n        marginBottom: 20,\r\n    },\r\n    saveButton: {\r\n        height: 50,\r\n        borderRadius: 10,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginTop: 10,\r\n    },\r\n    saveButtonText: {\r\n        fontSize: 16,\r\n        fontWeight: '600',\r\n    },\r\n}); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}