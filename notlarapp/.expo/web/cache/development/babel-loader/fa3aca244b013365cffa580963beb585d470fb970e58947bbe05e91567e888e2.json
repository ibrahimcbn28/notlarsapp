{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useTheme } from \"../context/ThemeContext\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SettingsScreen = function SettingsScreen() {\n  var _useTheme = useTheme(),\n    isDarkMode = _useTheme.isDarkMode,\n    toggleTheme = _useTheme.toggleTheme,\n    colors = _useTheme.colors;\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    notifications = _useState2[0],\n    setNotifications = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    autoSync = _useState4[0],\n    setAutoSync = _useState4[1];\n  return _jsxs(View, {\n    style: [styles.container, {\n      backgroundColor: colors.background\n    }],\n    children: [_jsxs(View, {\n      style: [styles.section, {\n        borderBottomColor: colors.border\n      }],\n      children: [_jsx(Text, {\n        style: [styles.sectionTitle, {\n          color: colors.text\n        }],\n        children: \"G\\xF6r\\xFCn\\xFCm\"\n      }), _jsxs(View, {\n        style: [styles.settingItem, {\n          borderBottomColor: colors.border\n        }],\n        children: [_jsx(Text, {\n          style: [styles.settingLabel, {\n            color: colors.text\n          }],\n          children: \"Karanl\\u0131k Mod\"\n        }), _jsx(Switch, {\n          value: isDarkMode,\n          onValueChange: toggleTheme,\n          trackColor: {\n            false: '#767577',\n            true: colors.primary\n          },\n          thumbColor: isDarkMode ? '#f4f3f4' : '#f4f3f4'\n        })]\n      })]\n    }), _jsxs(View, {\n      style: [styles.section, {\n        borderBottomColor: colors.border\n      }],\n      children: [_jsx(Text, {\n        style: [styles.sectionTitle, {\n          color: colors.text\n        }],\n        children: \"Bildirimler\"\n      }), _jsxs(View, {\n        style: [styles.settingItem, {\n          borderBottomColor: colors.border\n        }],\n        children: [_jsx(Text, {\n          style: [styles.settingLabel, {\n            color: colors.text\n          }],\n          children: \"Bildirimler\"\n        }), _jsx(Switch, {\n          value: notifications,\n          onValueChange: setNotifications,\n          trackColor: {\n            false: '#767577',\n            true: colors.primary\n          },\n          thumbColor: notifications ? '#f4f3f4' : '#f4f3f4'\n        })]\n      })]\n    }), _jsxs(View, {\n      style: [styles.section, {\n        borderBottomColor: colors.border\n      }],\n      children: [_jsx(Text, {\n        style: [styles.sectionTitle, {\n          color: colors.text\n        }],\n        children: \"Veri\"\n      }), _jsxs(View, {\n        style: [styles.settingItem, {\n          borderBottomColor: colors.border\n        }],\n        children: [_jsx(Text, {\n          style: [styles.settingLabel, {\n            color: colors.text\n          }],\n          children: \"Otomatik Senkronizasyon\"\n        }), _jsx(Switch, {\n          value: autoSync,\n          onValueChange: setAutoSync,\n          trackColor: {\n            false: '#767577',\n            true: colors.primary\n          },\n          thumbColor: autoSync ? '#f4f3f4' : '#f4f3f4'\n        })]\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: [styles.button, {\n        backgroundColor: colors.buttonBackground\n      }],\n      children: _jsx(Text, {\n        style: [styles.buttonText, {\n          color: colors.buttonText\n        }],\n        children: \"\\xD6nbelle\\u011Fi Temizle\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: [styles.button, {\n        backgroundColor: colors.buttonBackground\n      }],\n      children: _jsx(Text, {\n        style: [styles.buttonText, {\n          color: colors.buttonText\n        }],\n        children: \"Hakk\\u0131nda\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16\n  },\n  section: {\n    marginBottom: 32\n  },\n  sectionTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 16,\n    color: '#007AFF'\n  },\n  settingItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 16,\n    borderBottomWidth: 1\n  },\n  settingLabel: {\n    fontSize: 16\n  },\n  button: {\n    backgroundColor: '#f0f0f0',\n    padding: 16,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginBottom: 16\n  },\n  buttonText: {\n    fontSize: 16,\n    color: '#007AFF'\n  }\n});\nexport default SettingsScreen;","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","Switch","TouchableOpacity","useTheme","jsx","_jsx","jsxs","_jsxs","SettingsScreen","_useTheme","isDarkMode","toggleTheme","colors","_useState","_useState2","_slicedToArray","notifications","setNotifications","_useState3","_useState4","autoSync","setAutoSync","style","styles","container","backgroundColor","background","children","section","borderBottomColor","border","sectionTitle","color","text","settingItem","settingLabel","value","onValueChange","trackColor","false","true","primary","thumbColor","button","buttonBackground","buttonText","create","flex","padding","marginBottom","fontSize","fontWeight","flexDirection","justifyContent","alignItems","paddingVertical","borderBottomWidth","borderRadius"],"sources":["C:/Users/Windows/OneDrive/Masaüstü/notlarapp/src/screens/SettingsScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, StyleSheet, Switch, TouchableOpacity } from 'react-native';\r\nimport { useTheme } from '../context/ThemeContext';\r\n\r\nconst SettingsScreen = () => {\r\n    const { isDarkMode, toggleTheme, colors } = useTheme();\r\n    const [notifications, setNotifications] = useState(true);\r\n    const [autoSync, setAutoSync] = useState(true);\r\n\r\n    return (\r\n        <View style={[styles.container, { backgroundColor: colors.background }]}>\r\n            <View style={[styles.section, { borderBottomColor: colors.border }]}>\r\n                <Text style={[styles.sectionTitle, { color: colors.text }]}>Görünüm</Text>\r\n                <View style={[styles.settingItem, { borderBottomColor: colors.border }]}>\r\n                    <Text style={[styles.settingLabel, { color: colors.text }]}>Karanlık Mod</Text>\r\n                    <Switch\r\n                        value={isDarkMode}\r\n                        onValueChange={toggleTheme}\r\n                        trackColor={{ false: '#767577', true: colors.primary }}\r\n                        thumbColor={isDarkMode ? '#f4f3f4' : '#f4f3f4'}\r\n                    />\r\n                </View>\r\n            </View>\r\n\r\n            <View style={[styles.section, { borderBottomColor: colors.border }]}>\r\n                <Text style={[styles.sectionTitle, { color: colors.text }]}>Bildirimler</Text>\r\n                <View style={[styles.settingItem, { borderBottomColor: colors.border }]}>\r\n                    <Text style={[styles.settingLabel, { color: colors.text }]}>Bildirimler</Text>\r\n                    <Switch\r\n                        value={notifications}\r\n                        onValueChange={setNotifications}\r\n                        trackColor={{ false: '#767577', true: colors.primary }}\r\n                        thumbColor={notifications ? '#f4f3f4' : '#f4f3f4'}\r\n                    />\r\n                </View>\r\n            </View>\r\n\r\n            <View style={[styles.section, { borderBottomColor: colors.border }]}>\r\n                <Text style={[styles.sectionTitle, { color: colors.text }]}>Veri</Text>\r\n                <View style={[styles.settingItem, { borderBottomColor: colors.border }]}>\r\n                    <Text style={[styles.settingLabel, { color: colors.text }]}>Otomatik Senkronizasyon</Text>\r\n                    <Switch\r\n                        value={autoSync}\r\n                        onValueChange={setAutoSync}\r\n                        trackColor={{ false: '#767577', true: colors.primary }}\r\n                        thumbColor={autoSync ? '#f4f3f4' : '#f4f3f4'}\r\n                    />\r\n                </View>\r\n            </View>\r\n\r\n            <TouchableOpacity style={[styles.button, { backgroundColor: colors.buttonBackground }]}>\r\n                <Text style={[styles.buttonText, { color: colors.buttonText }]}>Önbelleği Temizle</Text>\r\n            </TouchableOpacity>\r\n\r\n            <TouchableOpacity style={[styles.button, { backgroundColor: colors.buttonBackground }]}>\r\n                <Text style={[styles.buttonText, { color: colors.buttonText }]}>Hakkında</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        padding: 16,\r\n    },\r\n    section: {\r\n        marginBottom: 32,\r\n    },\r\n    sectionTitle: {\r\n        fontSize: 20,\r\n        fontWeight: 'bold',\r\n        marginBottom: 16,\r\n        color: '#007AFF',\r\n    },\r\n    settingItem: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        paddingVertical: 16,\r\n        borderBottomWidth: 1,\r\n    },\r\n    settingLabel: {\r\n        fontSize: 16,\r\n    },\r\n    button: {\r\n        backgroundColor: '#f0f0f0',\r\n        padding: 16,\r\n        borderRadius: 8,\r\n        alignItems: 'center',\r\n        marginBottom: 16,\r\n    },\r\n    buttonText: {\r\n        fontSize: 16,\r\n        color: '#007AFF',\r\n    },\r\n});\r\n\r\nexport default SettingsScreen; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}