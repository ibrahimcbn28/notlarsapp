{"ast":null,"code":"import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from '@expo/vector-icons';\nimport HomeScreen from \"../screens/HomeScreen\";\nimport NoteDetailScreen from \"../screens/NoteDetailScreen\";\nimport CreateNoteScreen from \"../screens/CreateNoteScreen\";\nimport ProfileScreen from \"../screens/ProfileScreen\";\nimport SettingsScreen from \"../screens/SettingsScreen\";\nimport AuthScreen from \"../screens/AuthScreen\";\nimport EditProfileScreen from \"../screens/EditProfileScreen\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\nfunction MainTabs() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n            color = _ref2.color,\n            size = _ref2.size;\n          var iconName;\n          if (route.name === 'Home') {\n            iconName = focused ? 'home' : 'home-outline';\n          } else if (route.name === 'Profile') {\n            iconName = focused ? 'person' : 'person-outline';\n          } else if (route.name === 'Settings') {\n            iconName = focused ? 'settings' : 'settings-outline';\n          }\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: '#007AFF',\n        tabBarInactiveTintColor: 'gray'\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Home\",\n      component: HomeScreen,\n      options: {\n        title: 'Ana Sayfa'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen,\n      options: {\n        title: 'Profil'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Settings\",\n      component: SettingsScreen,\n      options: {\n        title: 'Ayarlar'\n      }\n    })]\n  });\n}\nexport default function AppNavigator() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      screenOptions: {\n        headerStyle: {\n          backgroundColor: '#fff'\n        },\n        headerTintColor: '#007AFF',\n        headerTitleStyle: {\n          fontWeight: 'bold'\n        }\n      },\n      children: [_jsx(Stack.Screen, {\n        name: \"Auth\",\n        component: AuthScreen,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Main\",\n        component: MainTabs,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"NoteDetail\",\n        component: NoteDetailScreen,\n        options: {\n          title: 'Not Detayı'\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"CreateNote\",\n        component: CreateNoteScreen,\n        options: function options(_ref3) {\n          var _route$params;\n          var route = _ref3.route;\n          return {\n            title: (_route$params = route.params) != null && _route$params.note ? 'Notu Düzenle' : 'Yeni Not'\n          };\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"EditProfile\",\n        component: EditProfileScreen,\n        options: {\n          title: 'Profili Düzenle'\n        }\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","NavigationContainer","createStackNavigator","createBottomTabNavigator","Ionicons","HomeScreen","NoteDetailScreen","CreateNoteScreen","ProfileScreen","SettingsScreen","AuthScreen","EditProfileScreen","jsx","_jsx","jsxs","_jsxs","Stack","Tab","MainTabs","Navigator","screenOptions","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","children","Screen","component","options","title","AppNavigator","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","headerShown","_ref3","_route$params","params","note"],"sources":["C:/Users/Windows/OneDrive/Masaüstü/notlarapp/src/navigation/AppNavigator.js"],"sourcesContent":["import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from '@expo/vector-icons';\n\n// Ekranlar\nimport HomeScreen from '../screens/HomeScreen';\nimport NoteDetailScreen from '../screens/NoteDetailScreen';\nimport CreateNoteScreen from '../screens/CreateNoteScreen';\nimport ProfileScreen from '../screens/ProfileScreen';\nimport SettingsScreen from '../screens/SettingsScreen';\nimport AuthScreen from '../screens/AuthScreen';\nimport EditProfileScreen from '../screens/EditProfileScreen';\n\nconst Stack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nfunction MainTabs() {\n    return (\n        <Tab.Navigator\n            screenOptions={({ route }) => ({\n                tabBarIcon: ({ focused, color, size }) => {\n                    let iconName;\n\n                    if (route.name === 'Home') {\n                        iconName = focused ? 'home' : 'home-outline';\n                    } else if (route.name === 'Profile') {\n                        iconName = focused ? 'person' : 'person-outline';\n                    } else if (route.name === 'Settings') {\n                        iconName = focused ? 'settings' : 'settings-outline';\n                    }\n\n                    return <Ionicons name={iconName} size={size} color={color} />;\n                },\n                tabBarActiveTintColor: '#007AFF',\n                tabBarInactiveTintColor: 'gray',\n            })}\n        >\n            <Tab.Screen\n                name=\"Home\"\n                component={HomeScreen}\n                options={{ title: 'Ana Sayfa' }}\n            />\n            <Tab.Screen\n                name=\"Profile\"\n                component={ProfileScreen}\n                options={{ title: 'Profil' }}\n            />\n            <Tab.Screen\n                name=\"Settings\"\n                component={SettingsScreen}\n                options={{ title: 'Ayarlar' }}\n            />\n        </Tab.Navigator>\n    );\n}\n\nexport default function AppNavigator() {\n    return (\n        <NavigationContainer>\n            <Stack.Navigator\n                screenOptions={{\n                    headerStyle: {\n                        backgroundColor: '#fff',\n                    },\n                    headerTintColor: '#007AFF',\n                    headerTitleStyle: {\n                        fontWeight: 'bold',\n                    },\n                }}\n            >\n                <Stack.Screen\n                    name=\"Auth\"\n                    component={AuthScreen}\n                    options={{ headerShown: false }}\n                />\n                <Stack.Screen\n                    name=\"Main\"\n                    component={MainTabs}\n                    options={{ headerShown: false }}\n                />\n                <Stack.Screen\n                    name=\"NoteDetail\"\n                    component={NoteDetailScreen}\n                    options={{ title: 'Not Detayı' }}\n                />\n                <Stack.Screen\n                    name=\"CreateNote\"\n                    component={CreateNoteScreen}\n                    options={({ route }) => ({\n                        title: route.params?.note ? 'Notu Düzenle' : 'Yeni Not',\n                    })}\n                />\n                <Stack.Screen\n                    name=\"EditProfile\"\n                    component={EditProfileScreen}\n                    options={{ title: 'Profili Düzenle' }}\n                />\n            </Stack.Navigator>\n        </NavigationContainer>\n    );\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}