{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useFocusEffect } from '@react-navigation/native';\nimport { getNotes } from \"../services/api\";\nimport NoteCard from \"../components/NoteCard\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    notes = _useState2[0],\n    setNotes = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    error = _useState6[0],\n    setError = _useState6[1];\n  var loadNotes = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        setLoading(true);\n        setError(null);\n        var data = yield getNotes();\n        setNotes(data);\n      } catch (error) {\n        console.error('Notlar yüklenirken hata oluştu:', error);\n        setError('Notlar yüklenirken bir hata oluştu.');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function loadNotes() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useFocusEffect(useCallback(function () {\n    loadNotes();\n  }, []));\n  var renderItem = function renderItem(_ref3) {\n    var item = _ref3.item;\n    return _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('NoteDetail', {\n          noteId: item.id\n        });\n      },\n      children: _jsx(NoteCard, {\n        note: item\n      })\n    });\n  };\n  if (loading) {\n    return _jsx(View, {\n      style: [styles.container, styles.centerContent],\n      children: _jsx(Text, {\n        children: \"Y\\xFCkleniyor...\"\n      })\n    });\n  }\n  if (error) {\n    return _jsxs(View, {\n      style: [styles.container, styles.centerContent],\n      children: [_jsx(Text, {\n        style: styles.errorText,\n        children: error\n      }), _jsx(TouchableOpacity, {\n        style: styles.retryButton,\n        onPress: loadNotes,\n        children: _jsx(Text, {\n          style: styles.retryButtonText,\n          children: \"Tekrar Dene\"\n        })\n      })]\n    });\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [notes.length === 0 ? _jsx(View, {\n      style: styles.centerContent,\n      children: _jsx(Text, {\n        style: styles.emptyText,\n        children: \"Hen\\xFCz not eklenmemi\\u015F\"\n      })\n    }) : _jsx(FlatList, {\n      data: notes,\n      renderItem: renderItem,\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      },\n      contentContainerStyle: styles.listContainer,\n      onRefresh: loadNotes,\n      refreshing: loading\n    }), _jsx(TouchableOpacity, {\n      style: styles.fab,\n      onPress: function onPress() {\n        return navigation.navigate('CreateNote');\n      },\n      children: _jsx(Text, {\n        style: styles.fabText,\n        children: \"+\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  centerContent: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20\n  },\n  listContainer: {\n    padding: 16\n  },\n  fab: {\n    position: 'absolute',\n    right: 20,\n    bottom: 20,\n    width: 56,\n    height: 56,\n    borderRadius: 28,\n    backgroundColor: '#007AFF',\n    justifyContent: 'center',\n    alignItems: 'center',\n    elevation: 4,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4\n  },\n  fabText: {\n    fontSize: 24,\n    color: '#fff',\n    fontWeight: 'bold'\n  },\n  errorText: {\n    color: 'red',\n    marginBottom: 16,\n    textAlign: 'center'\n  },\n  retryButton: {\n    backgroundColor: '#007AFF',\n    padding: 12,\n    borderRadius: 8\n  },\n  retryButtonText: {\n    color: '#fff',\n    fontWeight: '600'\n  },\n  emptyText: {\n    color: '#666',\n    fontSize: 16\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","useCallback","View","Text","FlatList","StyleSheet","TouchableOpacity","useFocusEffect","getNotes","NoteCard","jsx","_jsx","jsxs","_jsxs","HomeScreen","_ref","navigation","_useState","_useState2","_slicedToArray","notes","setNotes","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","loadNotes","_ref2","_asyncToGenerator","data","console","apply","arguments","renderItem","_ref3","item","onPress","navigate","noteId","id","children","note","style","styles","container","centerContent","errorText","retryButton","retryButtonText","length","emptyText","keyExtractor","toString","contentContainerStyle","listContainer","onRefresh","refreshing","fab","fabText","create","flex","backgroundColor","justifyContent","alignItems","padding","position","right","bottom","width","height","borderRadius","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius","fontSize","color","fontWeight","marginBottom","textAlign"],"sources":["C:/Users/Windows/OneDrive/Masaüstü/notlarapp/src/screens/HomeScreen.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { View, Text, FlatList, StyleSheet, TouchableOpacity } from 'react-native';\nimport { useFocusEffect } from '@react-navigation/native';\nimport { getNotes } from '../services/api';\nimport NoteCard from '../components/NoteCard';\n\nexport default function HomeScreen({ navigation }) {\n    const [notes, setNotes] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    const loadNotes = async () => {\n        try {\n            setLoading(true);\n            setError(null);\n            const data = await getNotes();\n            setNotes(data);\n        } catch (error) {\n            console.error('Notlar yüklenirken hata oluştu:', error);\n            setError('Notlar yüklenirken bir hata oluştu.');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    // Sayfa her odaklandığında notları yenile\n    useFocusEffect(\n        useCallback(() => {\n            loadNotes();\n        }, [])\n    );\n\n    const renderItem = ({ item }) => (\n        <TouchableOpacity\n            onPress={() => navigation.navigate('NoteDetail', { noteId: item.id })}\n        >\n            <NoteCard note={item} />\n        </TouchableOpacity>\n    );\n\n    if (loading) {\n        return (\n            <View style={[styles.container, styles.centerContent]}>\n                <Text>Yükleniyor...</Text>\n            </View>\n        );\n    }\n\n    if (error) {\n        return (\n            <View style={[styles.container, styles.centerContent]}>\n                <Text style={styles.errorText}>{error}</Text>\n                <TouchableOpacity style={styles.retryButton} onPress={loadNotes}>\n                    <Text style={styles.retryButtonText}>Tekrar Dene</Text>\n                </TouchableOpacity>\n            </View>\n        );\n    }\n\n    return (\n        <View style={styles.container}>\n            {notes.length === 0 ? (\n                <View style={styles.centerContent}>\n                    <Text style={styles.emptyText}>Henüz not eklenmemiş</Text>\n                </View>\n            ) : (\n                <FlatList\n                    data={notes}\n                    renderItem={renderItem}\n                    keyExtractor={(item) => item.id.toString()}\n                    contentContainerStyle={styles.listContainer}\n                    onRefresh={loadNotes}\n                    refreshing={loading}\n                />\n            )}\n            <TouchableOpacity\n                style={styles.fab}\n                onPress={() => navigation.navigate('CreateNote')}\n            >\n                <Text style={styles.fabText}>+</Text>\n            </TouchableOpacity>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n    },\n    centerContent: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        padding: 20,\n    },\n    listContainer: {\n        padding: 16,\n    },\n    fab: {\n        position: 'absolute',\n        right: 20,\n        bottom: 20,\n        width: 56,\n        height: 56,\n        borderRadius: 28,\n        backgroundColor: '#007AFF',\n        justifyContent: 'center',\n        alignItems: 'center',\n        elevation: 4,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.25,\n        shadowRadius: 4,\n    },\n    fabText: {\n        fontSize: 24,\n        color: '#fff',\n        fontWeight: 'bold',\n    },\n    errorText: {\n        color: 'red',\n        marginBottom: 16,\n        textAlign: 'center',\n    },\n    retryButton: {\n        backgroundColor: '#007AFF',\n        padding: 12,\n        borderRadius: 8,\n    },\n    retryButtonText: {\n        color: '#fff',\n        fontWeight: '600',\n    },\n    emptyText: {\n        color: '#666',\n        fontSize: 16,\n    },\n}); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}