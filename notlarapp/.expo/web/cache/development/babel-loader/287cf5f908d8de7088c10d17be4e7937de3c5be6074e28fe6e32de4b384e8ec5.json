{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nvar _excluded = [\"password\"],\n  _excluded2 = [\"password\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport axios from 'axios';\nvar API_URL = 'http://localhost:3001';\nvar api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport var loginUser = function () {\n  var _ref = _asyncToGenerator(function* (credentials) {\n    try {\n      var response = yield api.get('/user', {\n        params: {\n          email: credentials.email\n        }\n      });\n      var user = response.data;\n      if (user && user.password === credentials.password) {\n        var password = user.password,\n          userData = _objectWithoutProperties(user, _excluded);\n        return userData;\n      }\n      throw new Error('Geçersiz kullanıcı adı veya şifre');\n    } catch (error) {\n      console.error('Giriş hatası:', error);\n      throw error;\n    }\n  });\n  return function loginUser(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var registerUser = function () {\n  var _ref2 = _asyncToGenerator(function* (userData) {\n    try {\n      var existingUser = yield api.get('/user', {\n        params: {\n          email: userData.email\n        }\n      });\n      if (existingUser.data && existingUser.data.email === userData.email) {\n        throw new Error('Bu e-posta adresi zaten kullanımda');\n      }\n      var response = yield api.post('/user', {\n        id: Date.now(),\n        name: userData.name,\n        email: userData.email,\n        password: userData.password,\n        avatar: 'https://via.placeholder.com/150',\n        createdAt: new Date().toISOString()\n      });\n      var _response$data = response.data,\n        password = _response$data.password,\n        user = _objectWithoutProperties(_response$data, _excluded2);\n      return user;\n    } catch (error) {\n      if (error.message === 'Bu e-posta adresi zaten kullanımda') {\n        throw error;\n      }\n      console.error('Kayıt hatası:', error);\n      throw new Error('Kayıt işlemi sırasında bir hata oluştu');\n    }\n  });\n  return function registerUser(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var updateUserProfile = function () {\n  var _ref3 = _asyncToGenerator(function* (userId, userData) {\n    try {\n      var response = yield api.put(`/user/${userId}`, userData);\n      return response.data;\n    } catch (error) {\n      console.error('Profil güncelleme hatası:', error);\n      throw error;\n    }\n  });\n  return function updateUserProfile(_x3, _x4) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var getNotes = function () {\n  var _ref4 = _asyncToGenerator(function* (userId) {\n    try {\n      var response = yield api.get('/notes', {\n        params: {\n          userId: userId\n        }\n      });\n      return response.data.filter(function (note) {\n        return note.userId === userId;\n      });\n    } catch (error) {\n      console.error('Notlar alınırken hata:', error);\n      throw error;\n    }\n  });\n  return function getNotes(_x5) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var getNote = function () {\n  var _ref5 = _asyncToGenerator(function* (id) {\n    try {\n      var response = yield api.get(`/notes/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error('Not detayı alınırken hata:', error);\n      throw error;\n    }\n  });\n  return function getNote(_x6) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nexport var createNote = function () {\n  var _ref6 = _asyncToGenerator(function* (data, userId) {\n    try {\n      var noteData = _objectSpread(_objectSpread({}, data), {}, {\n        userId: userId,\n        createdAt: new Date().toISOString()\n      });\n      var response = yield api.post('/notes', noteData);\n      return response.data;\n    } catch (error) {\n      console.error('Not oluşturulurken hata:', error);\n      throw error;\n    }\n  });\n  return function createNote(_x7, _x8) {\n    return _ref6.apply(this, arguments);\n  };\n}();\nexport var updateNote = function () {\n  var _ref7 = _asyncToGenerator(function* (id, data) {\n    try {\n      var noteData = _objectSpread(_objectSpread({}, data), {}, {\n        updatedAt: new Date().toISOString()\n      });\n      var response = yield api.put(`/notes/${id}`, noteData);\n      return response.data;\n    } catch (error) {\n      console.error('Not güncellenirken hata:', error);\n      throw error;\n    }\n  });\n  return function updateNote(_x9, _x0) {\n    return _ref7.apply(this, arguments);\n  };\n}();\nexport var deleteNote = function () {\n  var _ref8 = _asyncToGenerator(function* (id) {\n    try {\n      yield api.delete(`/notes/${id}`);\n      return true;\n    } catch (error) {\n      console.error('Not silinirken hata:', error);\n      throw error;\n    }\n  });\n  return function deleteNote(_x1) {\n    return _ref8.apply(this, arguments);\n  };\n}();\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","loginUser","_ref","_asyncToGenerator","credentials","response","get","params","email","user","data","password","userData","_objectWithoutProperties","_excluded","Error","error","console","_x","apply","arguments","registerUser","_ref2","existingUser","post","id","Date","now","name","avatar","createdAt","toISOString","_response$data","_excluded2","message","_x2","updateUserProfile","_ref3","userId","put","_x3","_x4","getNotes","_ref4","filter","note","_x5","getNote","_ref5","_x6","createNote","_ref6","noteData","_objectSpread","_x7","_x8","updateNote","_ref7","updatedAt","_x9","_x0","deleteNote","_ref8","delete","_x1"],"sources":["C:/Users/Windows/OneDrive/Masaüstü/notlarapp/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:3001'; // JSON Server adresi\n\nconst api = axios.create({\n    baseURL: API_URL,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\n// Kimlik doğrulama işlemleri\nexport const loginUser = async (credentials) => {\n    try {\n        const response = await api.get('/user', {\n            params: { email: credentials.email }\n        });\n        const user = response.data;\n\n        if (user && user.password === credentials.password) {\n            const { password, ...userData } = user;\n            return userData;\n        }\n        throw new Error('Geçersiz kullanıcı adı veya şifre');\n    } catch (error) {\n        console.error('Giriş hatası:', error);\n        throw error;\n    }\n};\n\nexport const registerUser = async (userData) => {\n    try {\n        // Önce e-posta adresi ile kayıtlı kullanıcı var mı kontrol et\n        const existingUser = await api.get('/user', {\n            params: { email: userData.email }\n        });\n\n        if (existingUser.data && existingUser.data.email === userData.email) {\n            throw new Error('Bu e-posta adresi zaten kullanımda');\n        }\n\n        // Yeni kullanıcıyı kaydet\n        const response = await api.post('/user', {\n            id: Date.now(), // Benzersiz ID oluştur\n            name: userData.name,\n            email: userData.email,\n            password: userData.password,\n            avatar: 'https://via.placeholder.com/150',\n            createdAt: new Date().toISOString()\n        });\n\n        // Şifreyi çıkart ve kullanıcı bilgilerini döndür\n        const { password, ...user } = response.data;\n        return user;\n    } catch (error) {\n        if (error.message === 'Bu e-posta adresi zaten kullanımda') {\n            throw error;\n        }\n        console.error('Kayıt hatası:', error);\n        throw new Error('Kayıt işlemi sırasında bir hata oluştu');\n    }\n};\n\nexport const updateUserProfile = async (userId, userData) => {\n    try {\n        const response = await api.put(`/user/${userId}`, userData);\n        return response.data;\n    } catch (error) {\n        console.error('Profil güncelleme hatası:', error);\n        throw error;\n    }\n};\n\n// Not işlemleri\nexport const getNotes = async (userId) => {\n    try {\n        const response = await api.get('/notes', {\n            params: { userId }\n        });\n        return response.data.filter(note => note.userId === userId);\n    } catch (error) {\n        console.error('Notlar alınırken hata:', error);\n        throw error;\n    }\n};\n\nexport const getNote = async (id) => {\n    try {\n        const response = await api.get(`/notes/${id}`);\n        return response.data;\n    } catch (error) {\n        console.error('Not detayı alınırken hata:', error);\n        throw error;\n    }\n};\n\nexport const createNote = async (data, userId) => {\n    try {\n        const noteData = {\n            ...data,\n            userId,\n            createdAt: new Date().toISOString()\n        };\n        const response = await api.post('/notes', noteData);\n        return response.data;\n    } catch (error) {\n        console.error('Not oluşturulurken hata:', error);\n        throw error;\n    }\n};\n\nexport const updateNote = async (id, data) => {\n    try {\n        const noteData = {\n            ...data,\n            updatedAt: new Date().toISOString()\n        };\n        const response = await api.put(`/notes/${id}`, noteData);\n        return response.data;\n    } catch (error) {\n        console.error('Not güncellenirken hata:', error);\n        throw error;\n    }\n};\n\nexport const deleteNote = async (id) => {\n    try {\n        await api.delete(`/notes/${id}`);\n        return true;\n    } catch (error) {\n        console.error('Not silinirken hata:', error);\n        throw error;\n    }\n};\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}