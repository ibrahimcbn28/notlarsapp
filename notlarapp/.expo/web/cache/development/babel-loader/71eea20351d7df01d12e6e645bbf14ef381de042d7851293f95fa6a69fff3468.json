{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useTheme } from \"../context/ThemeContext\";\nimport { loginUser } from \"../services/api\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var _useTheme = useTheme(),\n    colors = _useTheme.colors;\n  var handleLogin = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (!email.trim() || !password.trim()) {\n        Alert.alert('Uyarı', 'E-posta ve şifre alanları zorunludur.');\n        return;\n      }\n      try {\n        setLoading(true);\n        var user = yield loginUser({\n          email: email.trim(),\n          password: password.trim()\n        });\n        yield AsyncStorage.setItem('user', JSON.stringify(user));\n        navigation.reset({\n          index: 0,\n          routes: [{\n            name: 'Main'\n          }]\n        });\n      } catch (error) {\n        console.error('Giriş hatası:', error);\n        Alert.alert('Hata', 'Giriş yapılırken bir hata oluştu. Lütfen bilgilerinizi kontrol edin.');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function handleLogin() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsx(View, {\n    style: [styles.container, {\n      backgroundColor: colors.background\n    }],\n    children: _jsxs(View, {\n      style: styles.form,\n      children: [_jsx(Text, {\n        style: [styles.title, {\n          color: colors.text\n        }],\n        children: \"Notlar Uygulamas\\u0131\"\n      }), _jsx(Text, {\n        style: [styles.subtitle, {\n          color: colors.textSecondary\n        }],\n        children: \"Giri\\u015F Yap\"\n      }), _jsx(TextInput, {\n        style: [styles.input, {\n          backgroundColor: colors.surface,\n          color: colors.text,\n          borderColor: colors.border\n        }],\n        value: email,\n        onChangeText: setEmail,\n        placeholder: \"E-posta\",\n        placeholderTextColor: colors.textSecondary,\n        keyboardType: \"email-address\",\n        autoCapitalize: \"none\",\n        editable: !loading\n      }), _jsx(TextInput, {\n        style: [styles.input, {\n          backgroundColor: colors.surface,\n          color: colors.text,\n          borderColor: colors.border\n        }],\n        value: password,\n        onChangeText: setPassword,\n        placeholder: \"\\u015Eifre\",\n        placeholderTextColor: colors.textSecondary,\n        secureTextEntry: true,\n        editable: !loading\n      }), _jsx(TouchableOpacity, {\n        style: [styles.loginButton, {\n          backgroundColor: colors.primary\n        }, loading && {\n          opacity: 0.7\n        }],\n        onPress: handleLogin,\n        disabled: loading,\n        children: loading ? _jsx(ActivityIndicator, {\n          color: colors.background\n        }) : _jsx(Text, {\n          style: [styles.loginButtonText, {\n            color: colors.background\n          }],\n          children: \"Giri\\u015F Yap\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.registerButton,\n        onPress: function onPress() {\n          return navigation.navigate('Register');\n        },\n        disabled: loading,\n        children: _jsx(Text, {\n          style: [styles.registerButtonText, {\n            color: colors.primary\n          }],\n          children: \"Hesab\\u0131n\\u0131z yok mu? Kay\\u0131t olun\"\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  form: {\n    flex: 1,\n    padding: 20,\n    justifyContent: 'center'\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    marginBottom: 8,\n    textAlign: 'center'\n  },\n  subtitle: {\n    fontSize: 18,\n    marginBottom: 32,\n    textAlign: 'center'\n  },\n  input: {\n    height: 50,\n    borderWidth: 1,\n    borderRadius: 10,\n    paddingHorizontal: 15,\n    fontSize: 16,\n    marginBottom: 16\n  },\n  loginButton: {\n    height: 50,\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 16\n  },\n  loginButtonText: {\n    fontSize: 16,\n    fontWeight: '600'\n  },\n  registerButton: {\n    marginTop: 16,\n    padding: 8\n  },\n  registerButtonText: {\n    fontSize: 14,\n    textAlign: 'center'\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","TextInput","StyleSheet","TouchableOpacity","Alert","ActivityIndicator","AsyncStorage","useTheme","loginUser","jsx","_jsx","jsxs","_jsxs","LoginScreen","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","loading","setLoading","_useTheme","colors","handleLogin","_ref2","_asyncToGenerator","trim","alert","user","setItem","JSON","stringify","reset","index","routes","name","error","console","apply","arguments","style","styles","container","backgroundColor","background","children","form","title","color","text","subtitle","textSecondary","input","surface","borderColor","border","value","onChangeText","placeholder","placeholderTextColor","keyboardType","autoCapitalize","editable","secureTextEntry","loginButton","primary","opacity","onPress","disabled","loginButtonText","registerButton","navigate","registerButtonText","create","flex","padding","justifyContent","fontSize","fontWeight","marginBottom","textAlign","height","borderWidth","borderRadius","paddingHorizontal","alignItems","marginTop"],"sources":["C:/Users/Windows/OneDrive/Masaüstü/notlarapp/src/screens/LoginScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n    View,\r\n    Text,\r\n    TextInput,\r\n    StyleSheet,\r\n    TouchableOpacity,\r\n    Alert,\r\n    ActivityIndicator,\r\n} from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useTheme } from '../context/ThemeContext';\r\nimport { loginUser } from '../services/api';\r\n\r\nexport default function LoginScreen({ navigation }) {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const { colors } = useTheme();\r\n\r\n    const handleLogin = async () => {\r\n        if (!email.trim() || !password.trim()) {\r\n            Alert.alert('Uyarı', 'E-posta ve şifre alanları zorunludur.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setLoading(true);\r\n            const user = await loginUser({\r\n                email: email.trim(),\r\n                password: password.trim(),\r\n            });\r\n\r\n            await AsyncStorage.setItem('user', JSON.stringify(user));\r\n            navigation.reset({\r\n                index: 0,\r\n                routes: [{ name: 'Main' }],\r\n            });\r\n        } catch (error) {\r\n            console.error('Giriş hatası:', error);\r\n            Alert.alert('Hata', 'Giriş yapılırken bir hata oluştu. Lütfen bilgilerinizi kontrol edin.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <View style={[styles.container, { backgroundColor: colors.background }]}>\r\n            <View style={styles.form}>\r\n                <Text style={[styles.title, { color: colors.text }]}>\r\n                    Notlar Uygulaması\r\n                </Text>\r\n                <Text style={[styles.subtitle, { color: colors.textSecondary }]}>\r\n                    Giriş Yap\r\n                </Text>\r\n\r\n                <TextInput\r\n                    style={[styles.input, {\r\n                        backgroundColor: colors.surface,\r\n                        color: colors.text,\r\n                        borderColor: colors.border\r\n                    }]}\r\n                    value={email}\r\n                    onChangeText={setEmail}\r\n                    placeholder=\"E-posta\"\r\n                    placeholderTextColor={colors.textSecondary}\r\n                    keyboardType=\"email-address\"\r\n                    autoCapitalize=\"none\"\r\n                    editable={!loading}\r\n                />\r\n\r\n                <TextInput\r\n                    style={[styles.input, {\r\n                        backgroundColor: colors.surface,\r\n                        color: colors.text,\r\n                        borderColor: colors.border\r\n                    }]}\r\n                    value={password}\r\n                    onChangeText={setPassword}\r\n                    placeholder=\"Şifre\"\r\n                    placeholderTextColor={colors.textSecondary}\r\n                    secureTextEntry\r\n                    editable={!loading}\r\n                />\r\n\r\n                <TouchableOpacity\r\n                    style={[\r\n                        styles.loginButton,\r\n                        { backgroundColor: colors.primary },\r\n                        loading && { opacity: 0.7 }\r\n                    ]}\r\n                    onPress={handleLogin}\r\n                    disabled={loading}\r\n                >\r\n                    {loading ? (\r\n                        <ActivityIndicator color={colors.background} />\r\n                    ) : (\r\n                        <Text style={[styles.loginButtonText, { color: colors.background }]}>\r\n                            Giriş Yap\r\n                        </Text>\r\n                    )}\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity\r\n                    style={styles.registerButton}\r\n                    onPress={() => navigation.navigate('Register')}\r\n                    disabled={loading}\r\n                >\r\n                    <Text style={[styles.registerButtonText, { color: colors.primary }]}>\r\n                        Hesabınız yok mu? Kayıt olun\r\n                    </Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n    },\r\n    form: {\r\n        flex: 1,\r\n        padding: 20,\r\n        justifyContent: 'center',\r\n    },\r\n    title: {\r\n        fontSize: 32,\r\n        fontWeight: 'bold',\r\n        marginBottom: 8,\r\n        textAlign: 'center',\r\n    },\r\n    subtitle: {\r\n        fontSize: 18,\r\n        marginBottom: 32,\r\n        textAlign: 'center',\r\n    },\r\n    input: {\r\n        height: 50,\r\n        borderWidth: 1,\r\n        borderRadius: 10,\r\n        paddingHorizontal: 15,\r\n        fontSize: 16,\r\n        marginBottom: 16,\r\n    },\r\n    loginButton: {\r\n        height: 50,\r\n        borderRadius: 10,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginTop: 16,\r\n    },\r\n    loginButtonText: {\r\n        fontSize: 16,\r\n        fontWeight: '600',\r\n    },\r\n    registerButton: {\r\n        marginTop: 16,\r\n        padding: 8,\r\n    },\r\n    registerButtonText: {\r\n        fontSize: 14,\r\n        textAlign: 'center',\r\n    },\r\n}); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}