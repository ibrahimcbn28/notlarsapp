{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar ThemeContext = createContext();\nexport var ThemeProvider = function ThemeProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isDarkMode = _useState2[0],\n    setIsDarkMode = _useState2[1];\n  useEffect(function () {\n    loadThemePreference();\n  }, []);\n  var loadThemePreference = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var savedTheme = yield AsyncStorage.getItem('theme');\n        if (savedTheme !== null) {\n          setIsDarkMode(savedTheme === 'dark');\n        }\n      } catch (error) {\n        console.error('Tema tercihi yüklenirken hata:', error);\n      }\n    });\n    return function loadThemePreference() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var toggleTheme = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var newTheme = !isDarkMode;\n        setIsDarkMode(newTheme);\n        yield AsyncStorage.setItem('theme', newTheme ? 'dark' : 'light');\n      } catch (error) {\n        console.error('Tema değiştirilirken hata:', error);\n      }\n    });\n    return function toggleTheme() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var theme = {\n    isDarkMode: isDarkMode,\n    toggleTheme: toggleTheme,\n    colors: isDarkMode ? {\n      background: '#121212',\n      surface: '#1E1E1E',\n      text: '#FFFFFF',\n      textSecondary: '#B0B0B0',\n      primary: '#BB86FC',\n      border: '#2C2C2C'\n    } : {\n      background: '#FFFFFF',\n      surface: '#F5F5F5',\n      text: '#000000',\n      textSecondary: '#666666',\n      primary: '#007AFF',\n      border: '#E0E0E0'\n    }\n  };\n  return _jsx(ThemeContext.Provider, {\n    value: theme,\n    children: children\n  });\n};\nexport var useTheme = function useTheme() {\n  var context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","AsyncStorage","jsx","_jsx","ThemeContext","ThemeProvider","_ref","children","_useState","_useState2","_slicedToArray","isDarkMode","setIsDarkMode","loadThemePreference","_ref2","_asyncToGenerator","savedTheme","getItem","error","console","apply","arguments","toggleTheme","_ref3","newTheme","setItem","theme","colors","background","surface","text","textSecondary","primary","border","Provider","value","useTheme","context","undefined","Error"],"sources":["C:/Users/Windows/OneDrive/Masaüstü/notlarapp/src/context/ThemeContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst ThemeContext = createContext();\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n    const [isDarkMode, setIsDarkMode] = useState(false);\r\n\r\n    useEffect(() => {\r\n        loadThemePreference();\r\n    }, []);\r\n\r\n    const loadThemePreference = async () => {\r\n        try {\r\n            const savedTheme = await AsyncStorage.getItem('theme');\r\n            if (savedTheme !== null) {\r\n                setIsDarkMode(savedTheme === 'dark');\r\n            }\r\n        } catch (error) {\r\n            console.error('Tema tercihi yüklenirken hata:', error);\r\n        }\r\n    };\r\n\r\n    const toggleTheme = async () => {\r\n        try {\r\n            const newTheme = !isDarkMode;\r\n            setIsDarkMode(newTheme);\r\n            await AsyncStorage.setItem('theme', newTheme ? 'dark' : 'light');\r\n        } catch (error) {\r\n            console.error('Tema değiştirilirken hata:', error);\r\n        }\r\n    };\r\n\r\n    const theme = {\r\n        isDarkMode,\r\n        toggleTheme,\r\n        colors: isDarkMode ? {\r\n            background: '#121212',\r\n            surface: '#1E1E1E',\r\n            text: '#FFFFFF',\r\n            textSecondary: '#B0B0B0',\r\n            primary: '#BB86FC',\r\n            border: '#2C2C2C'\r\n        } : {\r\n            background: '#FFFFFF',\r\n            surface: '#F5F5F5',\r\n            text: '#000000',\r\n            textSecondary: '#666666',\r\n            primary: '#007AFF',\r\n            border: '#E0E0E0'\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ThemeContext.Provider value={theme}>\r\n            {children}\r\n        </ThemeContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useTheme = () => {\r\n    const context = useContext(ThemeContext);\r\n    if (context === undefined) {\r\n        throw new Error('useTheme must be used within a ThemeProvider');\r\n    }\r\n    return context;\r\n}; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC7E,OAAOC,YAAY,MAAM,2CAA2C;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAErE,IAAMC,YAAY,GAAGP,aAAa,CAAC,CAAC;AAEpC,OAAO,IAAMQ,aAAa,GAAG,SAAhBA,aAAaA,CAAAC,IAAA,EAAqB;EAAA,IAAfC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EACpC,IAAAC,SAAA,GAAoCV,QAAQ,CAAC,KAAK,CAAC;IAAAW,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA5CG,UAAU,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAEhCT,SAAS,CAAC,YAAM;IACZa,mBAAmB,CAAC,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMA,mBAAmB;IAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;MACpC,IAAI;QACA,IAAMC,UAAU,SAASf,YAAY,CAACgB,OAAO,CAAC,OAAO,CAAC;QACtD,IAAID,UAAU,KAAK,IAAI,EAAE;UACrBJ,aAAa,CAACI,UAAU,KAAK,MAAM,CAAC;QACxC;MACJ,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MAC1D;IACJ,CAAC;IAAA,gBATKL,mBAAmBA,CAAA;MAAA,OAAAC,KAAA,CAAAM,KAAA,OAAAC,SAAA;IAAA;EAAA,GASxB;EAED,IAAMC,WAAW;IAAA,IAAAC,KAAA,GAAAR,iBAAA,CAAG,aAAY;MAC5B,IAAI;QACA,IAAMS,QAAQ,GAAG,CAACb,UAAU;QAC5BC,aAAa,CAACY,QAAQ,CAAC;QACvB,MAAMvB,YAAY,CAACwB,OAAO,CAAC,OAAO,EAAED,QAAQ,GAAG,MAAM,GAAG,OAAO,CAAC;MACpE,CAAC,CAAC,OAAON,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACtD;IACJ,CAAC;IAAA,gBARKI,WAAWA,CAAA;MAAA,OAAAC,KAAA,CAAAH,KAAA,OAAAC,SAAA;IAAA;EAAA,GAQhB;EAED,IAAMK,KAAK,GAAG;IACVf,UAAU,EAAVA,UAAU;IACVW,WAAW,EAAXA,WAAW;IACXK,MAAM,EAAEhB,UAAU,GAAG;MACjBiB,UAAU,EAAE,SAAS;MACrBC,OAAO,EAAE,SAAS;MAClBC,IAAI,EAAE,SAAS;MACfC,aAAa,EAAE,SAAS;MACxBC,OAAO,EAAE,SAAS;MAClBC,MAAM,EAAE;IACZ,CAAC,GAAG;MACAL,UAAU,EAAE,SAAS;MACrBC,OAAO,EAAE,SAAS;MAClBC,IAAI,EAAE,SAAS;MACfC,aAAa,EAAE,SAAS;MACxBC,OAAO,EAAE,SAAS;MAClBC,MAAM,EAAE;IACZ;EACJ,CAAC;EAED,OACI9B,IAAA,CAACC,YAAY,CAAC8B,QAAQ;IAACC,KAAK,EAAET,KAAM;IAAAnB,QAAA,EAC/BA;EAAQ,CACU,CAAC;AAEhC,CAAC;AAED,OAAO,IAAM6B,QAAQ,GAAG,SAAXA,QAAQA,CAAA,EAAS;EAC1B,IAAMC,OAAO,GAAGtC,UAAU,CAACK,YAAY,CAAC;EACxC,IAAIiC,OAAO,KAAKC,SAAS,EAAE;IACvB,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;EACnE;EACA,OAAOF,OAAO;AAClB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}