{"ast":null,"code":"import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\nimport LoginScreen from \"../screens/LoginScreen\";\nimport RegisterScreen from \"../screens/RegisterScreen\";\nimport HomeScreen from \"../screens/HomeScreen\";\nimport ProfileScreen from \"../screens/ProfileScreen\";\nimport SettingsScreen from \"../screens/SettingsScreen\";\nimport CreateNoteScreen from \"../screens/CreateNoteScreen\";\nimport NoteDetailScreen from \"../screens/NoteDetailScreen\";\nimport EditProfileScreen from \"../screens/EditProfileScreen\";\nimport EditNoteScreen from \"../screens/EditNoteScreen\";\nimport { useTheme } from \"../context/ThemeContext\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\nfunction TabNavigator() {\n  var _useTheme = useTheme(),\n    colors = _useTheme.colors;\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n            color = _ref2.color,\n            size = _ref2.size;\n          var iconName;\n          if (route.name === 'Home') {\n            iconName = focused ? 'home' : 'home';\n          } else if (route.name === 'Profile') {\n            iconName = focused ? 'person' : 'person-outline';\n          } else if (route.name === 'Settings') {\n            iconName = focused ? 'settings' : 'settings';\n          }\n          return _jsx(Icon, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: colors.primary,\n        tabBarInactiveTintColor: colors.textSecondary,\n        tabBarStyle: {\n          backgroundColor: colors.background,\n          borderTopColor: colors.border\n        }\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Home\",\n      component: HomeScreen,\n      options: {\n        title: 'Ana Sayfa'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen,\n      options: {\n        title: 'Profil'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Settings\",\n      component: SettingsScreen,\n      options: {\n        title: 'Ayarlar'\n      }\n    })]\n  });\n}\nexport default function AppNavigator() {\n  var _useTheme2 = useTheme(),\n    colors = _useTheme2.colors;\n  return _jsxs(Stack.Navigator, {\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: colors.background\n      },\n      headerTintColor: colors.text,\n      headerTitleStyle: {\n        fontWeight: 'bold'\n      },\n      cardStyle: {\n        backgroundColor: colors.background\n      }\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"Auth\",\n      component: LoginScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Register\",\n      component: RegisterScreen,\n      options: {\n        title: 'Kayıt Ol'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Main\",\n      component: TabNavigator,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"CreateNote\",\n      component: CreateNoteScreen,\n      options: {\n        title: 'Yeni Not'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"NoteDetail\",\n      component: NoteDetailScreen,\n      options: {\n        title: 'Not Detayı'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"EditProfile\",\n      component: EditProfileScreen,\n      options: {\n        title: 'Profili Düzenle'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"EditNote\",\n      component: EditNoteScreen,\n      options: {\n        title: 'Notu Düzenle'\n      }\n    })]\n  });\n}","map":{"version":3,"names":["React","createStackNavigator","createBottomTabNavigator","Icon","LoginScreen","RegisterScreen","HomeScreen","ProfileScreen","SettingsScreen","CreateNoteScreen","NoteDetailScreen","EditProfileScreen","EditNoteScreen","useTheme","jsx","_jsx","jsxs","_jsxs","Stack","Tab","TabNavigator","_useTheme","colors","Navigator","screenOptions","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","name","tabBarActiveTintColor","primary","tabBarInactiveTintColor","textSecondary","tabBarStyle","backgroundColor","background","borderTopColor","border","children","Screen","component","options","title","AppNavigator","_useTheme2","headerStyle","headerTintColor","text","headerTitleStyle","fontWeight","cardStyle","headerShown"],"sources":["C:/Users/Windows/OneDrive/Masaüstü/notlarapp/src/navigation/AppNavigator.js"],"sourcesContent":["import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Icon from 'react-native-vector-icons/MaterialIcons';\n\nimport LoginScreen from '../screens/LoginScreen';\nimport RegisterScreen from '../screens/RegisterScreen';\nimport HomeScreen from '../screens/HomeScreen';\nimport ProfileScreen from '../screens/ProfileScreen';\nimport SettingsScreen from '../screens/SettingsScreen';\nimport CreateNoteScreen from '../screens/CreateNoteScreen';\nimport NoteDetailScreen from '../screens/NoteDetailScreen';\nimport EditProfileScreen from '../screens/EditProfileScreen';\nimport EditNoteScreen from '../screens/EditNoteScreen';\nimport { useTheme } from '../context/ThemeContext';\n\nconst Stack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nfunction TabNavigator() {\n    const { colors } = useTheme();\n\n    return (\n        <Tab.Navigator\n            screenOptions={({ route }) => ({\n                tabBarIcon: ({ focused, color, size }) => {\n                    let iconName;\n\n                    if (route.name === 'Home') {\n                        iconName = focused ? 'home' : 'home';\n                    } else if (route.name === 'Profile') {\n                        iconName = focused ? 'person' : 'person-outline';\n                    } else if (route.name === 'Settings') {\n                        iconName = focused ? 'settings' : 'settings';\n                    }\n\n                    return <Icon name={iconName} size={size} color={color} />;\n                },\n                tabBarActiveTintColor: colors.primary,\n                tabBarInactiveTintColor: colors.textSecondary,\n                tabBarStyle: {\n                    backgroundColor: colors.background,\n                    borderTopColor: colors.border,\n                },\n            })}\n        >\n            <Tab.Screen\n                name=\"Home\"\n                component={HomeScreen}\n                options={{ title: 'Ana Sayfa' }}\n            />\n            <Tab.Screen\n                name=\"Profile\"\n                component={ProfileScreen}\n                options={{ title: 'Profil' }}\n            />\n            <Tab.Screen\n                name=\"Settings\"\n                component={SettingsScreen}\n                options={{ title: 'Ayarlar' }}\n            />\n        </Tab.Navigator>\n    );\n}\n\nexport default function AppNavigator() {\n    const { colors } = useTheme();\n\n    return (\n        <Stack.Navigator\n            screenOptions={{\n                headerStyle: {\n                    backgroundColor: colors.background,\n                },\n                headerTintColor: colors.text,\n                headerTitleStyle: {\n                    fontWeight: 'bold',\n                },\n                cardStyle: { backgroundColor: colors.background },\n            }}\n        >\n            <Stack.Screen\n                name=\"Auth\"\n                component={LoginScreen}\n                options={{ headerShown: false }}\n            />\n            <Stack.Screen\n                name=\"Register\"\n                component={RegisterScreen}\n                options={{ title: 'Kayıt Ol' }}\n            />\n            <Stack.Screen\n                name=\"Main\"\n                component={TabNavigator}\n                options={{ headerShown: false }}\n            />\n            <Stack.Screen\n                name=\"CreateNote\"\n                component={CreateNoteScreen}\n                options={{ title: 'Yeni Not' }}\n            />\n            <Stack.Screen\n                name=\"NoteDetail\"\n                component={NoteDetailScreen}\n                options={{ title: 'Not Detayı' }}\n            />\n            <Stack.Screen\n                name=\"EditProfile\"\n                component={EditProfileScreen}\n                options={{ title: 'Profili Düzenle' }}\n            />\n            <Stack.Screen\n                name=\"EditNote\"\n                component={EditNoteScreen}\n                options={{ title: 'Notu Düzenle' }}\n            />\n        </Stack.Navigator>\n    );\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}