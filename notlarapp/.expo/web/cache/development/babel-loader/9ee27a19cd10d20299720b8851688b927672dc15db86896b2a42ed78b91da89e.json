{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { useTheme } from \"../context/ThemeContext\";\nimport { updateNote } from \"../services/api\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function EditNoteScreen(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var note = route.params.note;\n  var _useState = useState(note.title),\n    _useState2 = _slicedToArray(_useState, 2),\n    title = _useState2[0],\n    setTitle = _useState2[1];\n  var _useState3 = useState(note.content),\n    _useState4 = _slicedToArray(_useState3, 2),\n    content = _useState4[0],\n    setContent = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var _useTheme = useTheme(),\n    colors = _useTheme.colors;\n  var handleSave = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (!title.trim() || !content.trim()) {\n        Alert.alert('Uyarı', 'Başlık ve içerik alanları zorunludur.');\n        return;\n      }\n      try {\n        setLoading(true);\n        yield updateNote(note.id, _objectSpread(_objectSpread({}, note), {}, {\n          title: title.trim(),\n          content: content.trim(),\n          updatedAt: new Date().toISOString()\n        }));\n        Alert.alert('Başarılı', 'Not başarıyla güncellendi.', [{\n          text: 'Tamam',\n          onPress: function onPress() {\n            return navigation.goBack();\n          }\n        }]);\n      } catch (error) {\n        console.error('Not güncellenirken hata:', error);\n        Alert.alert('Hata', 'Not güncellenirken bir hata oluştu.');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function handleSave() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsx(ScrollView, {\n    style: [styles.container, {\n      backgroundColor: colors.background\n    }],\n    children: _jsxs(View, {\n      style: styles.form,\n      children: [_jsx(Text, {\n        style: [styles.label, {\n          color: colors.text\n        }],\n        children: \"Ba\\u015Fl\\u0131k\"\n      }), _jsx(TextInput, {\n        style: [styles.input, {\n          backgroundColor: colors.surface,\n          color: colors.text,\n          borderColor: colors.border\n        }],\n        value: title,\n        onChangeText: setTitle,\n        placeholder: \"Not ba\\u015Fl\\u0131\\u011F\\u0131\",\n        placeholderTextColor: colors.textSecondary,\n        editable: !loading\n      }), _jsx(Text, {\n        style: [styles.label, {\n          color: colors.text\n        }],\n        children: \"\\u0130\\xE7erik\"\n      }), _jsx(TextInput, {\n        style: [styles.contentInput, {\n          backgroundColor: colors.surface,\n          color: colors.text,\n          borderColor: colors.border\n        }],\n        value: content,\n        onChangeText: setContent,\n        placeholder: \"Not i\\xE7eri\\u011Fi\",\n        placeholderTextColor: colors.textSecondary,\n        multiline: true,\n        textAlignVertical: \"top\",\n        editable: !loading\n      }), _jsx(TouchableOpacity, {\n        style: [styles.saveButton, {\n          backgroundColor: colors.primary\n        }, loading && {\n          opacity: 0.7\n        }],\n        onPress: handleSave,\n        disabled: loading,\n        children: loading ? _jsx(ActivityIndicator, {\n          color: colors.background\n        }) : _jsx(Text, {\n          style: [styles.saveButtonText, {\n            color: colors.background\n          }],\n          children: \"Kaydet\"\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  form: {\n    padding: 20\n  },\n  label: {\n    fontSize: 16,\n    marginBottom: 8,\n    fontWeight: '500'\n  },\n  input: {\n    height: 50,\n    borderWidth: 1,\n    borderRadius: 10,\n    paddingHorizontal: 15,\n    fontSize: 16,\n    marginBottom: 20\n  },\n  contentInput: {\n    height: 200,\n    borderWidth: 1,\n    borderRadius: 10,\n    paddingHorizontal: 15,\n    paddingTop: 15,\n    fontSize: 16,\n    marginBottom: 20\n  },\n  saveButton: {\n    height: 50,\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 10\n  },\n  saveButtonText: {\n    fontSize: 16,\n    fontWeight: '600'\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","TextInput","StyleSheet","TouchableOpacity","Alert","ActivityIndicator","ScrollView","useTheme","updateNote","jsx","_jsx","jsxs","_jsxs","EditNoteScreen","_ref","route","navigation","note","params","_useState","title","_useState2","_slicedToArray","setTitle","_useState3","content","_useState4","setContent","_useState5","_useState6","loading","setLoading","_useTheme","colors","handleSave","_ref2","_asyncToGenerator","trim","alert","id","_objectSpread","updatedAt","Date","toISOString","text","onPress","goBack","error","console","apply","arguments","style","styles","container","backgroundColor","background","children","form","label","color","input","surface","borderColor","border","value","onChangeText","placeholder","placeholderTextColor","textSecondary","editable","contentInput","multiline","textAlignVertical","saveButton","primary","opacity","disabled","saveButtonText","create","flex","padding","fontSize","marginBottom","fontWeight","height","borderWidth","borderRadius","paddingHorizontal","paddingTop","justifyContent","alignItems","marginTop"],"sources":["C:/Users/Windows/OneDrive/Masaüstü/notlarapp/src/screens/EditNoteScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n    View,\r\n    Text,\r\n    TextInput,\r\n    StyleSheet,\r\n    TouchableOpacity,\r\n    Alert,\r\n    ActivityIndicator,\r\n    ScrollView,\r\n} from 'react-native';\r\nimport { useTheme } from '../context/ThemeContext';\r\nimport { updateNote } from '../services/api';\r\n\r\nexport default function EditNoteScreen({ route, navigation }) {\r\n    const { note } = route.params;\r\n    const [title, setTitle] = useState(note.title);\r\n    const [content, setContent] = useState(note.content);\r\n    const [loading, setLoading] = useState(false);\r\n    const { colors } = useTheme();\r\n\r\n    const handleSave = async () => {\r\n        if (!title.trim() || !content.trim()) {\r\n            Alert.alert('Uyarı', 'Başlık ve içerik alanları zorunludur.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setLoading(true);\r\n            await updateNote(note.id, {\r\n                ...note,\r\n                title: title.trim(),\r\n                content: content.trim(),\r\n                updatedAt: new Date().toISOString(),\r\n            });\r\n\r\n            Alert.alert('Başarılı', 'Not başarıyla güncellendi.', [\r\n                { text: 'Tamam', onPress: () => navigation.goBack() }\r\n            ]);\r\n        } catch (error) {\r\n            console.error('Not güncellenirken hata:', error);\r\n            Alert.alert('Hata', 'Not güncellenirken bir hata oluştu.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ScrollView style={[styles.container, { backgroundColor: colors.background }]}>\r\n            <View style={styles.form}>\r\n                <Text style={[styles.label, { color: colors.text }]}>Başlık</Text>\r\n                <TextInput\r\n                    style={[styles.input, {\r\n                        backgroundColor: colors.surface,\r\n                        color: colors.text,\r\n                        borderColor: colors.border\r\n                    }]}\r\n                    value={title}\r\n                    onChangeText={setTitle}\r\n                    placeholder=\"Not başlığı\"\r\n                    placeholderTextColor={colors.textSecondary}\r\n                    editable={!loading}\r\n                />\r\n\r\n                <Text style={[styles.label, { color: colors.text }]}>İçerik</Text>\r\n                <TextInput\r\n                    style={[styles.contentInput, {\r\n                        backgroundColor: colors.surface,\r\n                        color: colors.text,\r\n                        borderColor: colors.border\r\n                    }]}\r\n                    value={content}\r\n                    onChangeText={setContent}\r\n                    placeholder=\"Not içeriği\"\r\n                    placeholderTextColor={colors.textSecondary}\r\n                    multiline\r\n                    textAlignVertical=\"top\"\r\n                    editable={!loading}\r\n                />\r\n\r\n                <TouchableOpacity\r\n                    style={[\r\n                        styles.saveButton,\r\n                        { backgroundColor: colors.primary },\r\n                        loading && { opacity: 0.7 }\r\n                    ]}\r\n                    onPress={handleSave}\r\n                    disabled={loading}\r\n                >\r\n                    {loading ? (\r\n                        <ActivityIndicator color={colors.background} />\r\n                    ) : (\r\n                        <Text style={[styles.saveButtonText, { color: colors.background }]}>\r\n                            Kaydet\r\n                        </Text>\r\n                    )}\r\n                </TouchableOpacity>\r\n            </View>\r\n        </ScrollView>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n    },\r\n    form: {\r\n        padding: 20,\r\n    },\r\n    label: {\r\n        fontSize: 16,\r\n        marginBottom: 8,\r\n        fontWeight: '500',\r\n    },\r\n    input: {\r\n        height: 50,\r\n        borderWidth: 1,\r\n        borderRadius: 10,\r\n        paddingHorizontal: 15,\r\n        fontSize: 16,\r\n        marginBottom: 20,\r\n    },\r\n    contentInput: {\r\n        height: 200,\r\n        borderWidth: 1,\r\n        borderRadius: 10,\r\n        paddingHorizontal: 15,\r\n        paddingTop: 15,\r\n        fontSize: 16,\r\n        marginBottom: 20,\r\n    },\r\n    saveButton: {\r\n        height: 50,\r\n        borderRadius: 10,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginTop: 10,\r\n    },\r\n    saveButtonText: {\r\n        fontSize: 16,\r\n        fontWeight: '600',\r\n    },\r\n}); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}