{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { loginUser, registerUser } from \"../services/api\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function AuthScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLogin = _useState2[0],\n    setIsLogin = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password = _useState6[0],\n    setPassword = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    name = _useState8[0],\n    setName = _useState8[1];\n  var _useState9 = useState(false),\n    _useState0 = _slicedToArray(_useState9, 2),\n    loading = _useState0[0],\n    setLoading = _useState0[1];\n  var handleAuth = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (!email.trim() || !password.trim() || !isLogin && !name.trim()) {\n        Alert.alert('Uyarı', 'Lütfen tüm alanları doldurun.');\n        return;\n      }\n      try {\n        setLoading(true);\n        var userData = isLogin ? yield loginUser({\n          email: email,\n          password: password\n        }) : yield registerUser({\n          name: name,\n          email: email,\n          password: password\n        });\n        yield AsyncStorage.setItem('user', JSON.stringify(userData));\n        navigation.replace('Main');\n      } catch (error) {\n        console.error('Kimlik doğrulama hatası:', error);\n        Alert.alert('Hata', isLogin ? 'Giriş yapılırken bir hata oluştu.' : 'Kayıt olurken bir hata oluştu.');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function handleAuth() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsx(KeyboardAvoidingView, {\n    behavior: Platform.OS === 'ios' ? 'padding' : 'height',\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.form,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: isLogin ? 'Giriş Yap' : 'Kayıt Ol'\n      }), !isLogin && _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Ad Soyad\",\n        value: name,\n        onChangeText: setName,\n        autoCapitalize: \"words\",\n        editable: !loading\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"E-posta\",\n        value: email,\n        onChangeText: setEmail,\n        keyboardType: \"email-address\",\n        autoCapitalize: \"none\",\n        editable: !loading\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"\\u015Eifre\",\n        value: password,\n        onChangeText: setPassword,\n        secureTextEntry: true,\n        editable: !loading\n      }), _jsx(TouchableOpacity, {\n        style: [styles.button, loading && styles.buttonDisabled],\n        onPress: handleAuth,\n        disabled: loading,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: isLogin ? 'Giriş Yap' : 'Kayıt Ol'\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.switchButton,\n        onPress: function onPress() {\n          return setIsLogin(!isLogin);\n        },\n        disabled: loading,\n        children: _jsx(Text, {\n          style: styles.switchButtonText,\n          children: isLogin ? 'Hesabınız yok mu? Kayıt olun' : 'Hesabınız var mı? Giriş yapın'\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  form: {\n    flex: 1,\n    padding: 20,\n    justifyContent: 'center'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20,\n    textAlign: 'center'\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 16,\n    fontSize: 16\n  },\n  button: {\n    backgroundColor: '#007AFF',\n    padding: 16,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginTop: 8\n  },\n  buttonDisabled: {\n    backgroundColor: '#ccc'\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: '600'\n  },\n  switchButton: {\n    marginTop: 16,\n    padding: 8\n  },\n  switchButtonText: {\n    color: '#007AFF',\n    textAlign: 'center'\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","TextInput","StyleSheet","TouchableOpacity","KeyboardAvoidingView","Platform","Alert","loginUser","registerUser","AsyncStorage","jsx","_jsx","jsxs","_jsxs","AuthScreen","_ref","navigation","_useState","_useState2","_slicedToArray","isLogin","setIsLogin","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","_useState7","_useState8","name","setName","_useState9","_useState0","loading","setLoading","handleAuth","_ref2","_asyncToGenerator","trim","alert","userData","setItem","JSON","stringify","replace","error","console","apply","arguments","behavior","OS","style","styles","container","children","form","title","input","placeholder","value","onChangeText","autoCapitalize","editable","keyboardType","secureTextEntry","button","buttonDisabled","onPress","disabled","buttonText","switchButton","switchButtonText","create","flex","backgroundColor","padding","justifyContent","fontSize","fontWeight","marginBottom","textAlign","borderWidth","borderColor","borderRadius","alignItems","marginTop","color"],"sources":["C:/Users/Windows/OneDrive/Masaüstü/notlarapp/src/screens/AuthScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n    View,\r\n    Text,\r\n    TextInput,\r\n    StyleSheet,\r\n    TouchableOpacity,\r\n    KeyboardAvoidingView,\r\n    Platform,\r\n    Alert,\r\n} from 'react-native';\r\nimport { loginUser, registerUser } from '../services/api';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nexport default function AuthScreen({ navigation }) {\r\n    const [isLogin, setIsLogin] = useState(true);\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleAuth = async () => {\r\n        if (!email.trim() || !password.trim() || (!isLogin && !name.trim())) {\r\n            Alert.alert('Uyarı', 'Lütfen tüm alanları doldurun.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setLoading(true);\r\n            const userData = isLogin\r\n                ? await loginUser({ email, password })\r\n                : await registerUser({ name, email, password });\r\n\r\n            await AsyncStorage.setItem('user', JSON.stringify(userData));\r\n            navigation.replace('Main');\r\n        } catch (error) {\r\n            console.error('Kimlik doğrulama hatası:', error);\r\n            Alert.alert(\r\n                'Hata',\r\n                isLogin\r\n                    ? 'Giriş yapılırken bir hata oluştu.'\r\n                    : 'Kayıt olurken bir hata oluştu.'\r\n            );\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <KeyboardAvoidingView\r\n            behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\r\n            style={styles.container}\r\n        >\r\n            <View style={styles.form}>\r\n                <Text style={styles.title}>\r\n                    {isLogin ? 'Giriş Yap' : 'Kayıt Ol'}\r\n                </Text>\r\n\r\n                {!isLogin && (\r\n                    <TextInput\r\n                        style={styles.input}\r\n                        placeholder=\"Ad Soyad\"\r\n                        value={name}\r\n                        onChangeText={setName}\r\n                        autoCapitalize=\"words\"\r\n                        editable={!loading}\r\n                    />\r\n                )}\r\n\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder=\"E-posta\"\r\n                    value={email}\r\n                    onChangeText={setEmail}\r\n                    keyboardType=\"email-address\"\r\n                    autoCapitalize=\"none\"\r\n                    editable={!loading}\r\n                />\r\n\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder=\"Şifre\"\r\n                    value={password}\r\n                    onChangeText={setPassword}\r\n                    secureTextEntry\r\n                    editable={!loading}\r\n                />\r\n\r\n                <TouchableOpacity\r\n                    style={[styles.button, loading && styles.buttonDisabled]}\r\n                    onPress={handleAuth}\r\n                    disabled={loading}\r\n                >\r\n                    <Text style={styles.buttonText}>\r\n                        {isLogin ? 'Giriş Yap' : 'Kayıt Ol'}\r\n                    </Text>\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity\r\n                    style={styles.switchButton}\r\n                    onPress={() => setIsLogin(!isLogin)}\r\n                    disabled={loading}\r\n                >\r\n                    <Text style={styles.switchButtonText}>\r\n                        {isLogin\r\n                            ? 'Hesabınız yok mu? Kayıt olun'\r\n                            : 'Hesabınız var mı? Giriş yapın'}\r\n                    </Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </KeyboardAvoidingView>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n    },\r\n    form: {\r\n        flex: 1,\r\n        padding: 20,\r\n        justifyContent: 'center',\r\n    },\r\n    title: {\r\n        fontSize: 24,\r\n        fontWeight: 'bold',\r\n        marginBottom: 20,\r\n        textAlign: 'center',\r\n    },\r\n    input: {\r\n        borderWidth: 1,\r\n        borderColor: '#ddd',\r\n        borderRadius: 8,\r\n        padding: 12,\r\n        marginBottom: 16,\r\n        fontSize: 16,\r\n    },\r\n    button: {\r\n        backgroundColor: '#007AFF',\r\n        padding: 16,\r\n        borderRadius: 8,\r\n        alignItems: 'center',\r\n        marginTop: 8,\r\n    },\r\n    buttonDisabled: {\r\n        backgroundColor: '#ccc',\r\n    },\r\n    buttonText: {\r\n        color: '#fff',\r\n        fontSize: 16,\r\n        fontWeight: '600',\r\n    },\r\n    switchButton: {\r\n        marginTop: 16,\r\n        padding: 8,\r\n    },\r\n    switchButtonText: {\r\n        color: '#007AFF',\r\n        textAlign: 'center',\r\n    },\r\n}); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}