{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SettingsScreen() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    darkMode = _useState2[0],\n    setDarkMode = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    notifications = _useState4[0],\n    setNotifications = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    autoSync = _useState6[0],\n    setAutoSync = _useState6[1];\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.section,\n      children: [_jsx(Text, {\n        style: styles.sectionTitle,\n        children: \"G\\xF6r\\xFCn\\xFCm\"\n      }), _jsxs(View, {\n        style: styles.settingItem,\n        children: [_jsx(Text, {\n          style: styles.settingLabel,\n          children: \"Karanl\\u0131k Mod\"\n        }), _jsx(Switch, {\n          value: darkMode,\n          onValueChange: setDarkMode,\n          trackColor: {\n            false: '#767577',\n            true: '#81b0ff'\n          },\n          thumbColor: darkMode ? '#007AFF' : '#f4f3f4'\n        })]\n      })]\n    }), _jsxs(View, {\n      style: styles.section,\n      children: [_jsx(Text, {\n        style: styles.sectionTitle,\n        children: \"Bildirimler\"\n      }), _jsxs(View, {\n        style: styles.settingItem,\n        children: [_jsx(Text, {\n          style: styles.settingLabel,\n          children: \"Bildirimler\"\n        }), _jsx(Switch, {\n          value: notifications,\n          onValueChange: setNotifications,\n          trackColor: {\n            false: '#767577',\n            true: '#81b0ff'\n          },\n          thumbColor: notifications ? '#007AFF' : '#f4f3f4'\n        })]\n      })]\n    }), _jsxs(View, {\n      style: styles.section,\n      children: [_jsx(Text, {\n        style: styles.sectionTitle,\n        children: \"Veri\"\n      }), _jsxs(View, {\n        style: styles.settingItem,\n        children: [_jsx(Text, {\n          style: styles.settingLabel,\n          children: \"Otomatik Senkronizasyon\"\n        }), _jsx(Switch, {\n          value: autoSync,\n          onValueChange: setAutoSync,\n          trackColor: {\n            false: '#767577',\n            true: '#81b0ff'\n          },\n          thumbColor: autoSync ? '#007AFF' : '#f4f3f4'\n        })]\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"\\xD6nbelle\\u011Fi Temizle\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Hakk\\u0131nda\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    padding: 16\n  },\n  section: {\n    marginBottom: 32\n  },\n  sectionTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 16,\n    color: '#007AFF'\n  },\n  settingItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 8\n  },\n  settingLabel: {\n    fontSize: 16\n  },\n  button: {\n    backgroundColor: '#f0f0f0',\n    padding: 16,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginBottom: 16\n  },\n  buttonText: {\n    fontSize: 16,\n    color: '#007AFF'\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","Switch","TouchableOpacity","jsx","_jsx","jsxs","_jsxs","SettingsScreen","_useState","_useState2","_slicedToArray","darkMode","setDarkMode","_useState3","_useState4","notifications","setNotifications","_useState5","_useState6","autoSync","setAutoSync","style","styles","container","children","section","sectionTitle","settingItem","settingLabel","value","onValueChange","trackColor","false","true","thumbColor","button","buttonText","create","flex","backgroundColor","padding","marginBottom","fontSize","fontWeight","color","flexDirection","justifyContent","alignItems","paddingVertical","borderRadius"],"sources":["C:/Users/Windows/OneDrive/Masaüstü/notlarapp/src/screens/SettingsScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, StyleSheet, Switch, TouchableOpacity } from 'react-native';\r\n\r\nexport default function SettingsScreen() {\r\n    const [darkMode, setDarkMode] = useState(false);\r\n    const [notifications, setNotifications] = useState(true);\r\n    const [autoSync, setAutoSync] = useState(true);\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.section}>\r\n                <Text style={styles.sectionTitle}>Görünüm</Text>\r\n                <View style={styles.settingItem}>\r\n                    <Text style={styles.settingLabel}>Karanlık Mod</Text>\r\n                    <Switch\r\n                        value={darkMode}\r\n                        onValueChange={setDarkMode}\r\n                        trackColor={{ false: '#767577', true: '#81b0ff' }}\r\n                        thumbColor={darkMode ? '#007AFF' : '#f4f3f4'}\r\n                    />\r\n                </View>\r\n            </View>\r\n\r\n            <View style={styles.section}>\r\n                <Text style={styles.sectionTitle}>Bildirimler</Text>\r\n                <View style={styles.settingItem}>\r\n                    <Text style={styles.settingLabel}>Bildirimler</Text>\r\n                    <Switch\r\n                        value={notifications}\r\n                        onValueChange={setNotifications}\r\n                        trackColor={{ false: '#767577', true: '#81b0ff' }}\r\n                        thumbColor={notifications ? '#007AFF' : '#f4f3f4'}\r\n                    />\r\n                </View>\r\n            </View>\r\n\r\n            <View style={styles.section}>\r\n                <Text style={styles.sectionTitle}>Veri</Text>\r\n                <View style={styles.settingItem}>\r\n                    <Text style={styles.settingLabel}>Otomatik Senkronizasyon</Text>\r\n                    <Switch\r\n                        value={autoSync}\r\n                        onValueChange={setAutoSync}\r\n                        trackColor={{ false: '#767577', true: '#81b0ff' }}\r\n                        thumbColor={autoSync ? '#007AFF' : '#f4f3f4'}\r\n                    />\r\n                </View>\r\n            </View>\r\n\r\n            <TouchableOpacity style={styles.button}>\r\n                <Text style={styles.buttonText}>Önbelleği Temizle</Text>\r\n            </TouchableOpacity>\r\n\r\n            <TouchableOpacity style={styles.button}>\r\n                <Text style={styles.buttonText}>Hakkında</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n        padding: 16,\r\n    },\r\n    section: {\r\n        marginBottom: 32,\r\n    },\r\n    sectionTitle: {\r\n        fontSize: 20,\r\n        fontWeight: 'bold',\r\n        marginBottom: 16,\r\n        color: '#007AFF',\r\n    },\r\n    settingItem: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        paddingVertical: 8,\r\n    },\r\n    settingLabel: {\r\n        fontSize: 16,\r\n    },\r\n    button: {\r\n        backgroundColor: '#f0f0f0',\r\n        padding: 16,\r\n        borderRadius: 8,\r\n        alignItems: 'center',\r\n        marginBottom: 16,\r\n    },\r\n    buttonText: {\r\n        fontSize: 16,\r\n        color: '#007AFF',\r\n    },\r\n}); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}