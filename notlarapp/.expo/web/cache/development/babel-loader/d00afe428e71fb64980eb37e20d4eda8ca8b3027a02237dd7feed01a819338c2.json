{"ast":null,"code":"import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useTheme } from \"../context/ThemeContext\";\nimport HomeScreen from \"../screens/HomeScreen\";\nimport NoteDetailScreen from \"../screens/NoteDetailScreen\";\nimport CreateNoteScreen from \"../screens/CreateNoteScreen\";\nimport ProfileScreen from \"../screens/ProfileScreen\";\nimport SettingsScreen from \"../screens/SettingsScreen\";\nimport AuthScreen from \"../screens/AuthScreen\";\nimport EditProfileScreen from \"../screens/EditProfileScreen\";\nimport Header from \"../components/Header\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\nfunction MainTabs() {\n  var _useTheme = useTheme(),\n    colors = _useTheme.colors;\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n            color = _ref2.color,\n            size = _ref2.size;\n          var iconName;\n          if (route.name === 'Home') {\n            iconName = focused ? 'home' : 'home-outline';\n          } else if (route.name === 'Profile') {\n            iconName = focused ? 'person' : 'person-outline';\n          } else if (route.name === 'Settings') {\n            iconName = focused ? 'settings' : 'settings-outline';\n          }\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: colors.primary,\n        tabBarInactiveTintColor: colors.textSecondary,\n        tabBarStyle: {\n          backgroundColor: colors.surface,\n          borderTopColor: colors.border\n        },\n        header: function header(_ref3) {\n          var navigation = _ref3.navigation,\n            route = _ref3.route,\n            options = _ref3.options;\n          return _jsx(Header, {\n            title: options.title\n          });\n        }\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Home\",\n      component: HomeScreen,\n      options: {\n        title: 'Ana Sayfa'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen,\n      options: {\n        title: 'Profil'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Settings\",\n      component: SettingsScreen,\n      options: {\n        title: 'Ayarlar'\n      }\n    })]\n  });\n}\nexport default function AppNavigator() {\n  var _useTheme2 = useTheme(),\n    colors = _useTheme2.colors;\n  return _jsxs(Stack.Navigator, {\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: colors.surface\n      },\n      headerTintColor: colors.primary,\n      headerTitleStyle: {\n        fontWeight: 'bold',\n        color: colors.text\n      },\n      cardStyle: {\n        backgroundColor: colors.background\n      },\n      header: function header(_ref4) {\n        var navigation = _ref4.navigation,\n          route = _ref4.route,\n          options = _ref4.options;\n        return _jsx(Header, {\n          title: options.title,\n          showBack: route.name !== 'Main'\n        });\n      }\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"Auth\",\n      component: AuthScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Main\",\n      component: MainTabs,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"NoteDetail\",\n      component: NoteDetailScreen,\n      options: {\n        title: 'Not Detayı'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"CreateNote\",\n      component: CreateNoteScreen,\n      options: function options(_ref5) {\n        var _route$params;\n        var route = _ref5.route;\n        return {\n          title: (_route$params = route.params) != null && _route$params.note ? 'Notu Düzenle' : 'Yeni Not'\n        };\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"EditProfile\",\n      component: EditProfileScreen,\n      options: {\n        title: 'Profili Düzenle'\n      }\n    })]\n  });\n}","map":{"version":3,"names":["React","createStackNavigator","createBottomTabNavigator","Ionicons","useTheme","HomeScreen","NoteDetailScreen","CreateNoteScreen","ProfileScreen","SettingsScreen","AuthScreen","EditProfileScreen","Header","jsx","_jsx","jsxs","_jsxs","Stack","Tab","MainTabs","_useTheme","colors","Navigator","screenOptions","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","name","tabBarActiveTintColor","primary","tabBarInactiveTintColor","textSecondary","tabBarStyle","backgroundColor","surface","borderTopColor","border","header","_ref3","navigation","options","title","children","Screen","component","AppNavigator","_useTheme2","headerStyle","headerTintColor","headerTitleStyle","fontWeight","text","cardStyle","background","_ref4","showBack","headerShown","_ref5","_route$params","params","note"],"sources":["C:/Users/Windows/OneDrive/Masaüstü/notlarapp/src/navigation/AppNavigator.js"],"sourcesContent":["import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useTheme } from '../context/ThemeContext';\n\n// Ekranlar\nimport HomeScreen from '../screens/HomeScreen';\nimport NoteDetailScreen from '../screens/NoteDetailScreen';\nimport CreateNoteScreen from '../screens/CreateNoteScreen';\nimport ProfileScreen from '../screens/ProfileScreen';\nimport SettingsScreen from '../screens/SettingsScreen';\nimport AuthScreen from '../screens/AuthScreen';\nimport EditProfileScreen from '../screens/EditProfileScreen';\n\n// Bileşenler\nimport Header from '../components/Header';\n\nconst Stack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nfunction MainTabs() {\n    const { colors } = useTheme();\n\n    return (\n        <Tab.Navigator\n            screenOptions={({ route }) => ({\n                tabBarIcon: ({ focused, color, size }) => {\n                    let iconName;\n\n                    if (route.name === 'Home') {\n                        iconName = focused ? 'home' : 'home-outline';\n                    } else if (route.name === 'Profile') {\n                        iconName = focused ? 'person' : 'person-outline';\n                    } else if (route.name === 'Settings') {\n                        iconName = focused ? 'settings' : 'settings-outline';\n                    }\n\n                    return <Ionicons name={iconName} size={size} color={color} />;\n                },\n                tabBarActiveTintColor: colors.primary,\n                tabBarInactiveTintColor: colors.textSecondary,\n                tabBarStyle: {\n                    backgroundColor: colors.surface,\n                    borderTopColor: colors.border,\n                },\n                header: ({ navigation, route, options }) => (\n                    <Header title={options.title} />\n                ),\n            })}\n        >\n            <Tab.Screen\n                name=\"Home\"\n                component={HomeScreen}\n                options={{ title: 'Ana Sayfa' }}\n            />\n            <Tab.Screen\n                name=\"Profile\"\n                component={ProfileScreen}\n                options={{ title: 'Profil' }}\n            />\n            <Tab.Screen\n                name=\"Settings\"\n                component={SettingsScreen}\n                options={{ title: 'Ayarlar' }}\n            />\n        </Tab.Navigator>\n    );\n}\n\nexport default function AppNavigator() {\n    const { colors } = useTheme();\n\n    return (\n        <Stack.Navigator\n            screenOptions={{\n                headerStyle: {\n                    backgroundColor: colors.surface,\n                },\n                headerTintColor: colors.primary,\n                headerTitleStyle: {\n                    fontWeight: 'bold',\n                    color: colors.text,\n                },\n                cardStyle: {\n                    backgroundColor: colors.background,\n                },\n                header: ({ navigation, route, options }) => (\n                    <Header\n                        title={options.title}\n                        showBack={route.name !== 'Main'}\n                    />\n                ),\n            }}\n        >\n            <Stack.Screen\n                name=\"Auth\"\n                component={AuthScreen}\n                options={{ headerShown: false }}\n            />\n            <Stack.Screen\n                name=\"Main\"\n                component={MainTabs}\n                options={{ headerShown: false }}\n            />\n            <Stack.Screen\n                name=\"NoteDetail\"\n                component={NoteDetailScreen}\n                options={{ title: 'Not Detayı' }}\n            />\n            <Stack.Screen\n                name=\"CreateNote\"\n                component={CreateNoteScreen}\n                options={({ route }) => ({\n                    title: route.params?.note ? 'Notu Düzenle' : 'Yeni Not',\n                })}\n            />\n            <Stack.Screen\n                name=\"EditProfile\"\n                component={EditProfileScreen}\n                options={{ title: 'Profili Düzenle' }}\n            />\n        </Stack.Navigator>\n    );\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}